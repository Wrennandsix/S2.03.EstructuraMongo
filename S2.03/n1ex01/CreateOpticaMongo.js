
db.createCollection( 'seller', {validator: {$jsonSchema: {bsonType: 'object',title:'seller',required: [         'seller_id',          'address',          'phone',          'email'],properties: {seller_id: {bsonType: 'objectId'},address: {bsonType: 'object',
title:'object',required: [         'country',          'city',          'street',          'street_number',          'floor',          'door',          'postal_code'],properties: {country: {bsonType: 'string'},city: {bsonType: 'string'},street: {bsonType: 'string'},street_number: {bsonType: 'int'},floor: {bsonType: 'int'},door: {bsonType: 'string'},postal_code: {bsonType: 'int'}}},phone: {bsonType: 'int'},email: {bsonType: 'string'},bills: {bsonType: 'array',items: {
title:'object',required: [         'bill_id',          'glasses',          'date',          'buyer_id'],properties: {bill_id: {bsonType: 'objectId'},glasses: {bsonType: 'array',items: {
title:'object',required: [         'glasses_id',          'model',          'graduationR',          'graduationL',          'frame',          'frame_colour',          'glass_colour',          'price',          'brand_id'],properties: {glasses_id: {bsonType: 'objectId'},model: {bsonType: 'string'},graduationR: {bsonType: 'double'},graduationL: {bsonType: 'double'},frame: {bsonType: 'string'},frame_colour: {bsonType: 'string'},glass_colour: {bsonType: 'string'},price: {bsonType: 'double'},brand_id: {bsonType: 'objectId'}}}},date: {bsonType: 'date'},buyer_id: {bsonType: 'objectId'}}}}}         }      }});  
db.createCollection( 'buyer', {validator: {$jsonSchema: {bsonType: 'object',title:'buyer',required: [         'buyer_id',          'address',          'phone',          'email',          'register_date'],properties: {buyer_id: {bsonType: 'objectId'},address: {bsonType: 'object',
title:'object',required: [         'country',          'city',          'street',          'street_number',          'floor',          'door',          'postal_code'],properties: {country: {bsonType: 'string'},city: {bsonType: 'string'},street: {bsonType: 'string'},street_number: {bsonType: 'int'},floor: {bsonType: 'int'},door: {bsonType: 'string'},postal_code: {bsonType: 'int'}}},phone: {bsonType: 'int'},email: {bsonType: 'string'},register_date: {bsonType: 'date'},referal_buyer_id: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'supplier', {validator: {$jsonSchema: {bsonType: 'object',title:'supplier',required: [         'supplier_id',          'address',          'name',          'fax',          'supplier',          'phone',          'brands',          'nif'],properties: {supplier_id: {bsonType: 'objectId'},address: {bsonType: 'object',
title:'object',required: [         'country',          'city',          'street',          'street_number',          'floor',          'door',          'postal_code'],properties: {country: {bsonType: 'string'},city: {bsonType: 'string'},street: {bsonType: 'string'},street_number: {bsonType: 'int'},floor: {bsonType: 'int'},door: {bsonType: 'string'},postal_code: {bsonType: 'int'}}},name: {bsonType: 'string'},fax: {bsonType: 'int'},supplier: {bsonType: 'string'},phone: {bsonType: 'int'},brands: {bsonType: 'array',items: {
title:'object',required: [         'brand_id',          'name'],properties: {brand_id: {bsonType: 'objectId'},name: {bsonType: 'string'}}}},nif: {bsonType: 'string'}}         }      }});  
db.createCollection( 'glasses_not_sold', {validator: {$jsonSchema: {bsonType: 'object',title:'glasses_not_sold',required: [         'glasses_id',          'model',          'graduationL',          'graduationR',          'frame',          'frame_colour',          'glass_colour',          'price',          'brand_id'],properties: {glasses_id: {bsonType: 'objectId'},model: {bsonType: 'string'},graduationL: {bsonType: 'double'},graduationR: {bsonType: 'double'},frame: {bsonType: 'string'},frame_colour: {bsonType: 'string'},glass_colour: {bsonType: 'string'},price: {bsonType: 'double'},brand_id: {bsonType: 'objectId'}}         }      }});  