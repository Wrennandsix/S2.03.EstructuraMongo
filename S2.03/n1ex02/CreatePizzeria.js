
db.createCollection( 'provinces', {validator: {$jsonSchema: {bsonType: 'object',title:'provinces',required: [         'province_id',          'name'],properties: {province_id: {bsonType: 'objectId'},name: {bsonType: 'string'}}         }      }});  
db.createCollection( 'locality', {validator: {$jsonSchema: {bsonType: 'object',title:'locality',required: [         'locality_id',          'province_id'],properties: {locality_id: {bsonType: 'objectId'},name: {bsonType: 'string'},province_id: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'customer', {validator: {$jsonSchema: {bsonType: 'object',title:'customer',required: [         'customer_id',          'name',          'surname',          'address',          'locality_id'],properties: {customer_id: {bsonType: 'objectId'},name: {bsonType: 'string'},surname: {bsonType: 'string'},address: {bsonType: 'array',items: {
title:'object',properties: {street: {bsonType: 'string'},street_num: {bsonType: 'int'},floor: {bsonType: 'int'},door: {bsonType: 'string'},postal_code: {bsonType: 'int'}}}},phone_num: {bsonType: 'int'},locality_id: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'order', {validator: {$jsonSchema: {bsonType: 'object',title:'order',required: [         'order_id',          'products_id',          'cook',          'store_id'],properties: {order_id: {bsonType: 'objectId'},products_id: {bsonType: 'array',items: {bsonType: 'objectId'}},date: {bsonType: 'date'},price: {bsonType: 'double'},cook: {bsonType: 'objectId'},store_id: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'deliveryMan', {validator: {$jsonSchema: {bsonType: 'object',title:'deliveryMan',required: [         'delivery_man_id',          'NIF',          'name',          'surnames',          'address',          'store'],properties: {delivery_man_id: {bsonType: 'objectId'},NIF: {bsonType: 'string'},name: {bsonType: 'string'},surnames: {bsonType: 'string'},address: {bsonType: 'object',
title:'object',properties: {street: {bsonType: 'string'},street_num: {bsonType: 'int'},floor: {bsonType: 'int'},door: {bsonType: 'string'},postal_code: {bsonType: 'int'}}},phone_num: {bsonType: 'int'},store: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'product', {validator: {$jsonSchema: {bsonType: 'object',title:'product',required: [         'product_id',          'name',          'description',          'image',          'price'],properties: {product_id: {bsonType: 'objectId'},name: {bsonType: 'string'},description: {bsonType: 'string'},image: {bsonType: 'binData'},price: {bsonType: 'double'}}         }      }});  
db.createCollection( 'store', {validator: {$jsonSchema: {bsonType: 'object',title:'store',required: [         'store_id',          'locality_id',          'address'],properties: {store_id: {bsonType: 'objectId'},locality_id: {bsonType: 'objectId'},address: {bsonType: 'object',
title:'object',properties: {street: {bsonType: 'string'},street_num: {bsonType: 'int'},floor: {bsonType: 'int'},door: {bsonType: 'string'},postal_code: {bsonType: 'int'}}},phone_num: {bsonType: 'int'}}         }      }});  
db.createCollection( 'cook', {validator: {$jsonSchema: {bsonType: 'object',title:'cook',required: [         'cook_id',          'NIF',          'name',          'surnames',          'address',          'store'],properties: {cook_id: {bsonType: 'objectId'},NIF: {bsonType: 'string'},name: {bsonType: 'string'},surnames: {bsonType: 'string'},address: {bsonType: 'object',
title:'object',properties: {street: {bsonType: 'string'},street_num: {bsonType: 'int'},floor: {bsonType: 'int'},door: {bsonType: 'string'},postal_code: {bsonType: 'int'}}},phone_num: {bsonType: 'int'},store: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'orderToDelivery', {validator: {$jsonSchema: {bsonType: 'object',title:'orderToDelivery',required: [         'order_to_delivery_id',          'products_id',          'delivery_man_id'],properties: {order_to_delivery_id: {bsonType: 'objectId'},products_id: {bsonType: 'array',items: {bsonType: 'objectId'}},delivery_time: {bsonType: 'date'},delivery_man_id: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'orderToTake', {validator: {$jsonSchema: {bsonType: 'object',title:'orderToTake',required: [         'order_to_take_id',          'products_id'],properties: {order_to_take_id: {bsonType: 'objectId'},products_id: {bsonType: 'array',items: {bsonType: 'objectId'}}}         }      }});  
db.createCollection( 'category', {validator: {$jsonSchema: {bsonType: 'object',title:'category',required: [         'category_id'],properties: {category_id: {bsonType: 'objectId'},category: {bsonType: 'string'}}         }      }});  
db.createCollection( 'hamburger', {validator: {$jsonSchema: {bsonType: 'object',title:'hamburger',required: [         'product_id'],properties: {product_id: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'drink', {validator: {$jsonSchema: {bsonType: 'object',title:'drink',required: [         'product_id'],properties: {product_id: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'pizza', {validator: {$jsonSchema: {bsonType: 'object',title:'pizza',required: [         'product_id',          'category_id'],properties: {product_id: {bsonType: 'objectId'},category_id: {bsonType: 'objectId'}}         }      }});  